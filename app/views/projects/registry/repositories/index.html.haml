- page_title "容器注册表"

.row.prepend-top-default.append-bottom-default
  .col-lg-3
    %h4.prepend-top-0
      = page_title
    %p
      With the Docker Container Registry integrated into GitLab, every project
      can have its own space to store its Docker images.
    %p.append-bottom-0
      = succeed '.' do
        Learn more about
        = link_to 'Container Registry', help_page_path('user/project/container_registry'), target: '_blank'

  .col-lg-9
    .panel.panel-default
      .panel-heading
        %h4.panel-title
          如何使用容器注册表
      .panel-body
        %p
          首先使用您的GitLab用户名和密码登录GitLab的容器注册表。
          如果您启用了
          = link_to '2FA 认证', help_page_path('user/profile/account/two_factor_authentication'), target: '_blank'
          您需要使用
          = succeed ':' do
            = link_to '个人访问令牌', help_page_path('user/profile/account/two_factor_authentication', anchor: 'personal-access-tokens'), target: '_blank'
        %pre
          docker login #{Gitlab.config.registry.host_port}
        %br
        %p
          登录成功后，您就可以自由的使用
          %code build
          和
          %code push
          命令创建和上传容器镜像：
        %pre
          :plain
            docker build -t #{escape_once(@project.container_registry_url)} .
            docker push #{escape_once(@project.container_registry_url)}

        %hr
        %h5.prepend-top-default
          Use different image names
        %p.light
          GitLab supports up to 3 levels of image names. The following
          examples of images are valid for your project:
        %pre
          :plain
            #{escape_once(@project.container_registry_url)}:tag
            #{escape_once(@project.container_registry_url)}/optional-image-name:tag
            #{escape_once(@project.container_registry_url)}/optional-name/optional-image-name:tag

    - if @images.blank?
      %p.settings-message.text-center.append-bottom-default
        此项目的容器注册表没有任何镜像。 参考以上的说明添加一个。
    - else
      = render partial: 'image', collection: @images
